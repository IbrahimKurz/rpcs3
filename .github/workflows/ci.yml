name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/*'
      - '.github/ISSUE_TEMPLATE/**'
      - '*.yml'
      - '*.md'
      - 'docs/**'
      - 'LICENSE'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '.github/*'
      - '.github/ISSUE_TEMPLATE/**'
      - '*.yml'
      - '*.md'
      - 'docs/**'
      - 'LICENSE'

jobs:
  Build_Linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        COMPILER: [clang, gcc]
        include:
          - COMPILER: gcc
            DEPLOY_APPIMAGE: true
    env:
#      CCACHE_DIR: /ccache
      BUILD_ARTIFACTSTAGINGDIRECTORY: /artifacts
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Docker setup and build
        run: |
          mkdir /artifacts
          docker pull --quiet rpcs3/rpcs3-travis-xenial:1.2
          docker run                                           \
            -v $(pwd):/rpcs3                                   \
            --env-file .travis/travis.env                      \
            -v $CCACHE_DIR:/root/.ccache                       \
            -v $BUILD_ARTIFACTSTAGINGDIRECTORY:/root/artifacts \
            rpcs3/rpcs3-travis-xenial:1.2                      \
            /bin/bash -ex /rpcs3/.ci/build-linux.bash
      - uses: actions/upload-artifact@v2
        with:
          name: Linux
          path: ${{ env.BUILD_ARTIFACTSTAGINGDIRECTORY }}

  Build_Windows:
    runs-on: windows-latest
    env:
      COMPILER: msvc
      QT_VER: 5.14.1
      QT_DATE: 202001240957
      VULKAN_VER: 1.1.126.0
      VULKAN_SDK_SHA: ee86f25580b550390ce46508415e744d62e87e9c0de6cd299998058253a2a4ba
#      CACHE_DIR: ./cache
      POWERSHELL_TELEMETRY_OPTOUT: 1
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download and unpack dependencies
        run: .ci/setup-windows.sh
      - uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VER }}
      - name: Export variables
        run: |
          .ci/export-azure-vars.sh
          echo '::set-env name=QTDIR::$env:Qt5_Dir'
      - uses: microsoft/setup-msbuild@v1
      - name: Compile SPIRV-Tools
        shell: powershell
        run: msbuild /m /p:"Platform=x64;Configuration=Release" Vulkan\spirv-tools-build\spirv-tools-build.vcxproj
      - name: Compile RPCS3
        shell: powershell
        run: msbuild /m /p:"Platform=x64;Configuration=Release - LLVM" rpcs3.sln
      - name: Pack up build artifacts
        run: .ci/deploy-windows.sh
